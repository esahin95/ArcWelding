/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       volScalarField;
    location    "0.05";
    object      T;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 1 0 0 0];

internalField   nonuniform List<scalar> 
800
(
300.002
300.004
300.009
300.017
300.03
300.048
300.071
300.096
300.118
300.131
300.131
300.117
300.095
300.07
300.048
300.03
300.017
300.009
300.004
300.002
300.005
300.009
300.018
300.034
300.058
300.089
300.127
300.166
300.2
300.221
300.221
300.2
300.166
300.126
300.089
300.058
300.034
300.018
300.009
300.005
300.013
300.023
300.045
300.08
300.13
300.192
300.261
300.33
300.388
300.422
300.422
300.387
300.329
300.26
300.191
300.13
300.08
300.045
300.023
300.013
300.029
300.052
300.1
300.175
300.275
300.391
300.514
300.628
300.72
300.772
300.772
300.719
300.627
300.513
300.391
300.275
300.175
300.1
300.052
300.029
300.058
300.104
300.198
300.342
300.525
300.728
300.929
301.105
301.239
301.313
301.313
301.239
301.104
300.928
300.728
300.526
300.343
300.199
300.104
300.058
300.102
300.182
300.344
300.59
300.898
301.228
301.536
301.791
301.974
302.07
302.07
301.974
301.791
301.535
301.228
300.899
300.592
300.345
300.182
300.103
300.157
300.277
300.525
300.903
301.377
301.877
302.327
302.679
302.917
303.035
303.036
302.917
302.679
302.326
301.876
301.378
300.904
300.525
300.277
300.157
300.211
300.371
300.709
301.236
301.908
302.619
303.246
303.718
304.018
304.161
304.161
304.018
303.717
303.243
302.616
301.906
301.234
300.708
300.37
300.21
300.251
300.442
300.86
301.534
302.418
303.365
304.2
304.813
305.188
305.36
305.36
305.187
304.811
304.194
303.356
302.407
301.525
300.855
300.44
300.249
300.266
300.476
300.951
301.748
302.831
304.021
305.08
305.852
306.315
306.521
306.521
306.311
305.843
305.062
303.997
302.805
301.727
300.938
300.47
300.264
300.256
300.467
300.965
301.843
303.085
304.497
305.78
306.722
307.285
307.534
307.531
307.275
306.699
305.742
304.449
303.038
301.807
300.945
300.458
300.252
300.223
300.419
300.904
301.803
303.142
304.729
306.218
307.334
308.006
308.303
308.297
307.984
307.289
306.151
304.652
303.073
301.756
300.879
300.408
300.219
300.178
300.346
300.785
301.643
302.994
304.678
306.33
307.611
308.402
308.756
308.743
308.362
307.537
306.225
304.564
302.898
301.583
300.754
300.334
300.173
300.13
300.263
300.629
301.388
302.654
304.329
306.069
307.491
308.404
308.821
308.799
308.335
307.37
305.91
304.166
302.527
301.313
300.594
300.25
300.125
300.086
300.183
300.46
301.073
302.162
303.704
305.42
306.915
307.931
308.409
308.373
307.821
306.734
305.196
303.492
302.01
300.991
300.426
300.171
300.082
300.052
300.115
300.305
300.747
301.588
302.868
304.408
305.859
306.912
307.427
307.375
306.759
305.623
304.139
302.634
301.434
300.669
300.274
300.105
300.049
300.029
300.065
300.181
300.464
301.035
301.969
303.185
304.427
305.395
305.885
305.819
305.209
304.161
302.906
301.748
300.901
300.4
300.157
300.058
300.026
300.014
300.033
300.095
300.254
300.59
301.175
301.992
302.892
303.639
304.027
303.959
303.452
302.642
301.752
301
300.491
300.209
300.079
300.029
300.013
300.006
300.015
300.045
300.122
300.292
300.601
301.058
301.59
302.054
302.299
302.243
301.905
301.402
300.889
300.486
300.23
300.095
300.036
300.013
300.005
300.003
300.006
300.019
300.052
300.126
300.263
300.472
300.724
300.951
301.07
301.035
300.859
300.613
300.377
300.201
300.093
300.038
300.014
300.005
300.002
300.001
300.002
300.007
300.019
300.047
300.099
300.177
300.273
300.359
300.403
300.386
300.316
300.222
300.135
300.071
300.033
300.013
300.005
300.002
300.001
300
300.001
300.002
300.006
300.016
300.032
300.057
300.086
300.112
300.124
300.118
300.096
300.068
300.041
300.022
300.01
300.004
300.002
300.001
300
300
300
300.001
300.002
300.005
300.009
300.016
300.023
300.029
300.032
300.031
300.025
300.018
300.011
300.006
300.003
300.001
300
300
300
300
300
300
300.001
300.001
300.002
300.004
300.005
300.007
300.007
300.007
300.006
300.004
300.003
300.001
300.001
300
300
300
300
300
300
300
300
300
300
300.001
300.001
300.001
300.001
300.001
300.001
300.001
300.001
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
)
;

boundaryField
{
    top
    {
        type            inletOutlet;
        inletValue      uniform 300;
        value           nonuniform List<scalar> 
20
(
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
)
;
    }
    left
    {
        type            zeroGradient;
    }
    right
    {
        type            zeroGradient;
    }
    bottom
    {
        type            zeroGradient;
    }
    front
    {
        type            empty;
    }
    back
    {
        type            empty;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
