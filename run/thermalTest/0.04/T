/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       volScalarField;
    location    "0.04";
    object      T;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 1 0 0 0];

internalField   nonuniform List<scalar> 
800
(
300.001
300.001
300.003
300.007
300.014
300.026
300.041
300.06
300.077
300.088
300.088
300.077
300.06
300.041
300.026
300.014
300.007
300.003
300.001
300.001
300.001
300.003
300.008
300.017
300.033
300.057
300.087
300.122
300.154
300.174
300.174
300.154
300.122
300.087
300.056
300.033
300.017
300.008
300.003
300.001
300.004
300.01
300.023
300.047
300.086
300.142
300.209
300.281
300.344
300.383
300.382
300.344
300.28
300.208
300.141
300.086
300.047
300.023
300.01
300.004
300.012
300.025
300.058
300.117
300.208
300.326
300.462
300.599
300.714
300.781
300.781
300.713
300.598
300.461
300.326
300.208
300.118
300.058
300.025
300.012
300.027
300.058
300.13
300.257
300.442
300.671
300.918
301.151
301.338
301.444
301.443
301.337
301.15
300.917
300.67
300.442
300.258
300.131
300.058
300.027
300.053
300.112
300.25
300.486
300.821
301.22
301.628
301.989
302.262
302.411
302.41
302.261
301.988
301.626
301.219
300.822
300.487
300.25
300.112
300.053
300.087
300.185
300.41
300.797
301.34
301.968
302.583
303.097
303.463
303.654
303.653
303.462
303.095
302.58
301.966
301.339
300.798
300.41
300.185
300.088
300.125
300.262
300.584
301.145
301.935
302.839
303.694
304.374
304.831
305.058
305.057
304.828
304.371
303.689
302.835
301.932
301.144
300.583
300.262
300.125
300.154
300.323
300.731
301.461
302.507
303.706
304.813
305.658
306.197
306.455
306.453
306.194
305.653
304.805
303.697
302.499
301.455
300.728
300.322
300.154
300.166
300.352
300.816
301.679
302.953
304.43
305.78
306.779
307.39
307.67
307.668
307.385
306.77
305.765
304.411
302.935
301.666
300.809
300.35
300.165
300.158
300.343
300.823
301.757
303.189
304.894
306.462
307.605
308.282
308.581
308.578
308.273
307.587
306.434
304.861
303.158
301.735
300.812
300.339
300.157
300.134
300.3
300.753
301.681
303.176
305.027
306.776
308.059
308.809
309.134
309.13
308.794
308.03
306.732
304.976
303.132
301.653
300.739
300.295
300.133
300.102
300.237
300.626
301.472
302.914
304.8
306.673
308.098
308.948
309.317
309.31
308.924
308.053
306.608
304.73
302.858
301.438
300.61
300.231
300.1
300.069
300.168
300.469
301.168
302.442
304.227
306.13
307.679
308.655
309.093
309.08
308.615
307.608
306.035
304.132
302.371
301.13
300.453
300.163
300.067
300.042
300.106
300.314
300.827
301.833
303.364
305.151
306.743
307.832
308.349
308.328
307.77
306.641
305.025
303.25
301.757
300.789
300.299
300.102
300.041
300.022
300.06
300.184
300.513
301.206
302.356
303.839
305.307
306.409
306.965
306.936
306.324
305.179
303.698
302.241
301.136
300.481
300.173
300.056
300.022
300.011
300.029
300.095
300.275
300.683
301.415
302.455
303.596
304.535
305.037
305.003
304.439
303.463
302.324
301.32
300.629
300.253
300.087
300.027
300.01
300.005
300.013
300.042
300.127
300.328
300.715
301.309
302.02
302.655
303.012
302.98
302.57
301.912
301.212
300.651
300.295
300.114
300.038
300.012
300.004
300.002
300.005
300.016
300.051
300.134
300.302
300.573
300.918
301.245
301.435
301.414
301.189
300.851
300.517
300.267
300.117
300.044
300.014
300.004
300.002
300.001
300.002
300.006
300.017
300.047
300.107
300.205
300.334
300.461
300.536
300.525
300.434
300.303
300.181
300.091
300.039
300.015
300.005
300.001
300.001
300
300.001
300.002
300.005
300.014
300.032
300.061
300.099
300.135
300.157
300.153
300.126
300.088
300.053
300.027
300.011
300.004
300.001
300
300
300
300
300
300.001
300.004
300.008
300.015
300.024
300.032
300.037
300.036
300.03
300.021
300.013
300.007
300.003
300.001
300
300
300
300
300
300
300
300.001
300.002
300.003
300.005
300.006
300.007
300.007
300.006
300.004
300.003
300.001
300.001
300
300
300
300
300
300
300
300
300
300
300.001
300.001
300.001
300.001
300.001
300.001
300.001
300.001
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
)
;

boundaryField
{
    top
    {
        type            inletOutlet;
        inletValue      uniform 300;
        value           nonuniform List<scalar> 
20
(
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
300
)
;
    }
    left
    {
        type            zeroGradient;
    }
    right
    {
        type            zeroGradient;
    }
    bottom
    {
        type            zeroGradient;
    }
    front
    {
        type            empty;
    }
    back
    {
        type            empty;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
